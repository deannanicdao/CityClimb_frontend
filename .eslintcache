[{"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/index.js":"1","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/App.js":"2","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Navbar.js":"3","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Landing.js":"4","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/routing/Routes.js":"5","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Schedule.js":"6","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/NotFound.js":"7","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Help.js":"8","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Register.js":"9","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Login.js":"10","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Search.js":"11","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/SingleClimb.js":"12","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/climbs/CreateClimbForm.js":"13","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/admin/StaffDashboard.js":"14","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/ClimbList.js":"15","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/climbs/Climb.js":"16","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/GymView.js":"17","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Climb.js":"18"},{"size":602,"mtime":1612485947117,"results":"19","hashOfConfig":"20"},{"size":517,"mtime":1612318239481,"results":"21","hashOfConfig":"20"},{"size":2052,"mtime":1612333930246,"results":"22","hashOfConfig":"20"},{"size":528,"mtime":1612312336862,"results":"23","hashOfConfig":"20"},{"size":1923,"mtime":1612485947115,"results":"24","hashOfConfig":"20"},{"size":2856,"mtime":1612333930265,"results":"25","hashOfConfig":"20"},{"size":206,"mtime":1612230012585,"results":"26","hashOfConfig":"20"},{"size":186,"mtime":1612312336860,"results":"27","hashOfConfig":"20"},{"size":3584,"mtime":1612500977482,"results":"28","hashOfConfig":"20"},{"size":1837,"mtime":1612230012580,"results":"29","hashOfConfig":"20"},{"size":1786,"mtime":1612485947113,"results":"30","hashOfConfig":"20"},{"size":884,"mtime":1612487102751,"results":"31","hashOfConfig":"20"},{"size":4142,"mtime":1612485940793,"results":"32","hashOfConfig":"20"},{"size":171,"mtime":1612333761699,"results":"33","hashOfConfig":"20"},{"size":1409,"mtime":1612485947112,"results":"34","hashOfConfig":"20"},{"size":846,"mtime":1612485947111,"results":"35","hashOfConfig":"20"},{"size":2348,"mtime":1612485947112,"results":"36","hashOfConfig":"20"},{"size":1384,"mtime":1612485940794,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1c9wjbv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/index.js",[],["83","84"],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/App.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Navbar.js",["85","86","87","88"],"import React, { useState, Fragment } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div >\n      <Navbar color=\"light\" light expand=\"lg\" className=\"text-right\" style={{justify_content: \"flex-end\"}}>\n        <NavbarBrand href=\"/\"><img src=\"./icon.png\" alt=\"logo\" width=\"50px\" height=\"50px\"></img></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar >\n          <Nav navbar >\n\n            <NavItem>\n              <NavLink> <Link to=\"/\"> Home </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/search\"> Search </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/schedule\"> Schedule </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/help\"> Help </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when logged in as staff */}\n            <NavItem>\n              <NavLink> <Link to=\"/create_climb\"> Create Climb </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when no staff logged in */}\n            <NavItem>\n              <NavLink> <Link to=\"/staff_login\"> Staff Login </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_register\"> Staff Register </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_dashboard\"> Staff Dashboard </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/climb_template\"> Climb </Link> </NavLink>\n            </NavItem>\n\n            </Nav>\n            </Collapse>\n          </Navbar>\n    </div>\n  )\n}\nexport default Example;","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Landing.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/routing/Routes.js",["89"],"import React from 'react'\nimport { Link, Switch, Route } from 'react-router-dom'\nimport Register from '../auth/Register'\nimport Login from '../auth/Login'\nimport Search from './../layout/Search'\nimport Schedule from './../layout/Schedule'\nimport StaffDashboard from './../admin/StaffDashboard'\nimport CreateClimbForm from './../climbs/CreateClimbForm'\nimport Help from './../layout/Help'\nimport NotFound from '../layout/NotFound'\nimport ClimbList from './../layout/ClimbList'\nimport Climb from './../climbs/Climb'\nimport SingleClimb from './../layout/SingleClimb'\n\n\nexport const Routes = () => {\n    return (\n        <section className=\"container\">\n            <Switch>\n                <Route exact path=\"/staff_register\" component={Register} />\n                <Route exact path=\"/staff_login\" component={Login} />\n                <Route exact path=\"/search\" component={Search} />\n                <Route exact path=\"/schedule\" component={Schedule} />\n                <Route exact path=\"/staff_dashboard\" component={StaffDashboard} />\n                <Route exact path=\"/create_climb\" component={CreateClimbForm} />\n                {/* <Route path=\"/climbs/:gym/:colour\" component={ClimbList} /> */}\n                <Route exact path=\"/climbs/:gym/:colour\" render={(props) => <ClimbList {...props} />} />\n                <Route exact path=\"/climbs/:gym/:colour/:climbId\" component={SingleClimb} />\n                <Route exact path=\"/help\" component={Help} />\n                <Route exact path=\"/climb_template\" component={Climb} />\n                <Route component={NotFound} /> \n            </Switch>\n        </section>\n    )\n}\n\nexport default Routes\n\n//             <Route exact path=\"/jobs/:id\" render={(props) => <EditJobPage {...props} loggedInUser={loggedInUser}/>} />\n//           <Route exact path=\"/gallery\" render={() => <GalleryPage />} />\n//           <Route exact path=\"/about\" render={() => <AboutPage />} />","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Schedule.js",["90"],"import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap';\nimport {\n     Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst Schedule = () => {\n\n\n    const [climbs, setClimbs] = useState([])\n\n    // const fetchClimbs = () => {\n    //     fetch(\"http://localhost:8000/climbs/\")\n    //     .then(res => res.json())\n    //     .then(data => console.log(data))\n    //     .catch(e => console.log(e))\n    // }\n\n    useEffect(() => {\n        // let isMounted = true\n        // fetchClimbs()\n        fetch(\"http://localhost:8000/climbs/\")\n        .then(res => res.json())\n        .then(data => { \n            console.log(data)\n            // if (isMounted == true) \n            setClimbs(data)\n        })\n        .catch(e => console.log(e))\n       \n        return () => {\n            // return () => { isMounted = false }\n        }\n    }, [])\n    \n\n    let climbList = [\n        { \"name\": \"Dungeon\", \"colour\": \"Red\", \"image\": \"https://imgur.com/RTFOOHR\" },\n        { \"name\": \"Zeplin\", \"colour\": \"Blue\", \"image\": \"https://imgur.com/yln0oYC\" },\n        { \"name\": \"Death Valley\", \"colour\": \"Green\", \"image\": \"https://imgur.com/ZHKnVr8\" },\n        { \"name\": \"Reningar's Revenge\", \"colour\": \"Purple\", \"image\": \"https://imgur.com/Hrzbo49\" },\n        { \"name\": \"In the Begins\", \"colour\": \"Black\", \"image\": \"https://imgur.com/Ld5Ux3g\" },\n        { \"name\": \"Christmas Special\", \"colour\": \"ReGreen\", \"image\": \"https://imgur.com/rg7RAdm\" },\n        { \"name\": \"Climb or Die\", \"colour\": \"Rainbow\", \"image\": \"https://imgur.com/aj9vfmu\" },\n        { \"name\": \"Pleasures Peak\", \"colour\": \"Yellow\", \"image\": \"https://imgur.com/hTkpXvw\" }\n      ]\n\n    return (\n        <>\n\n            <br />\n\n            {/* id gymn wall colour image video  */}\n\n            <Row gutter={40}>\n                {(climbs).map(climb => \n\n                    <Col // Responsive settings. Each row has a span of 12\n                    xs={{ span: 6 }} sm={{ span: 6 }} md={{ span: 6 }} // 2 cards per row\n                    lg={{ span: 4 }} xl={{ span: 4 }} // 3 cards per row\n                    >\n                        \n                    <Card> \n                        <CardImg top width=\"100%\" src={\"http://res.cloudinary.com/coderacademy/image/upload\"+climb.image} alt=\"Card image cap\" />\n                        <CardBody>\n                        <CardTitle tag=\"h5\">{climb.name}</CardTitle>\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{climb.colour}</CardSubtitle>\n                        <CardText>{climb._id}</CardText>\n                        <Button>Button</Button>\n                        </CardBody>\n                    </Card>\n                    <br />\n                    </Col>\n                )}\n            </Row>\n\n        </>\n      );\n    };\n\nexport default Schedule\n","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/NotFound.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Help.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Register.js",["91"],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Login.js",["92","93"],"import React, { Fragment, useState } from 'react'\n\n\nconst Login = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        staffNumber: '',\n        password: ''\n    })\n\n    const { email, staffNumber, password } = formData\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault()\n        console.log(formData)\n\n        const loggedInUser = {\n            email, \n            staffNumber,\n            password\n        }\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            const body = JSON.stringify(loggedInUser)\n\n            // const res = await axios.get('/users', body, config)\n            // console.log(res.data)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <h1>Login</h1>\n            <form className='form' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input type='text' placeholder='Email Address' name='email' value={email} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Staff Number' name='staffNumber' value={staffNumber} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Password' name='password' value={password} onChange={e => onChange(e)} required />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Search.js",["94","95","96"],"import React, { Fragment }  from 'react'\nimport { useForm } from \"react-hook-form\"\nimport GymView from './GymView'\n\nconst Search = () => {\n    const { register, watch } = useForm()\n\n    const selectedGym = watch(\"gym\", false)\n\n    \n\n    return (\n        <Fragment>\n            <p className='large'>Select Gym</p>\n            <form>\n                <input type=\"radio\" name=\"gym\" value=\"milton\" ref={register}/>Milton\n                <input type=\"radio\" name=\"gym\" value=\"newstead\" ref={register}/>Newstead\n                <input type=\"radio\" name=\"gym\" value=\"westend\" ref={register}/>West End\n            </form>\n\n            {selectedGym == \"milton\" && <GymView gym={\"milton\"}/>}\n            {selectedGym == \"newstead\" && <GymView gym={\"newstead\"}/>}\n            {selectedGym == \"westend\" && <GymView gym={\"westend\"}/>}\n        </Fragment>\n    )\n}\n\nexport default Search\n\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n\n// function App() {\n//   const { register, watch, errors, handleSubmit } = useForm();\n//   const watchShowAge = watch(\"showAge\", false); // you can supply default value as second argument\n//   const watchAllFields = watch(); // when pass nothing as argument, you are watching everything\n//   const watchFields = watch([\"showAge\", \"number\"]); // you can also target specific fields by their names\n\n//   const onSubmit = data => console.log(data);\n\n//   return (\n//     <>\n//       <form onSubmit={handleSubmit(onSubmit)}>\n//         <input type=\"checkbox\" name=\"showAge\" ref={register} />\n        \n//         {/* based on yes selection to display Age Input*/}\n//         {watchShowAge && <input type=\"number\" name=\"age\" ref={register({ min: 50 })} />}\n        \n//         <input type=\"submit\" />\n//       </form>\n//     </>\n//   );\n// }","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/SingleClimb.js",["97"],"import React, { useState, useEffect } from 'react'\nimport Climb from './Climb'\n// \n\nconst SingleClimb = (props) => {\n\n    const API_ENDPOINT = \"http://localhost:8000\"\n    const { gym, colour, climbId } = props.match.params\n\n    console.log(props)\n\n    const url = `${API_ENDPOINT}/climbs/${gym}/${colour}/${climbId}`\n\n    console.log(url)\n\n    const [climb, setClimb] = useState([])\n\n    useEffect(() => {\n        console.log(\"Mounted\")\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            // console.log(data)\n\n            setClimb(data)\n        })\n        .catch(e => console.log(e))\n       \n        return () => {\n            console.log(\"Unmounted\")\n        }\n    }, [])\n    \n    return (\n        <> \n        hello single climb \n        {console.log(climb)} \n        <Climb climb={climb} />\n        </>\n      );\n\n} \n\nexport default SingleClimb","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/climbs/CreateClimbForm.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/admin/StaffDashboard.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/ClimbList.js",["98","99"],"import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Climb from '../climbs/Climb'\n\n\nconst ClimbList = (props) => {\n\n    const API_ENDPOINT = \"http://localhost:8000\"\n    const { gym, colour } = props\n\n    // console.log(props)\n\n    const url = `${API_ENDPOINT}/climbs/${gym}/${colour}`\n\n    // console.log(url)\n\n    const [climbs, setClimbs] = useState([])\n\n    useEffect(() => {\n        console.log(\"Mounted\")\n        console.log(climbs)\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            console.log(data)\n\n            setClimbs(data)\n        })\n        .catch(e => console.log(e))\n       \n        return () => {\n            console.log(\"Unmounted\")\n        }\n    }, [])\n    \n    return (\n        <>\n            {colour.toUpperCase()}\n            <br />\n            <Row gutter={40}>\n                {(climbs).map(climb => \n\n                    <Col // Responsive settings. Each row has a span of 12\n                    xs={{ span: 6 }} sm={{ span: 6 }} md={{ span: 6 }} // 2 cards per row\n                    lg={{ span: 4 }} xl={{ span: 4 }} // 3 cards per row\n                    >\n\n                        <Climb climb={climb} />\n\n                    <br />\n                    </Col>\n                )}\n            </Row>\n\n        </>\n      );\n\n} \n\nexport default ClimbList","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/climbs/Climb.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/GymView.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Climb.js",["100"],"import React from 'react'\nimport {\n    Jumbotron\n} from 'reactstrap';\n\nconst Climb = () => {\n\n    let dummyClimb = {\n        \"name\": \"The Demigorgon\",\n        \"colour\": \"Red\",\n        \"location\": \"West End\",\n        \"setter\": \"Brad Pitt\",\n        \"date\": \"12/01/2021\",\n        \"description\": \"Known as the Prince of Demons, a self-proclaimed title, but one that is acknowledged by mortals and even his fellow demons because of his power and influence.\",\n        \"video\": \"tgbNymZ7vqY\"\n    }\n\n    return (\n        <div  className=\"climbs\">\n        <br />\n            <Jumbotron>\n                <div class=\"yt-container\">\n                    <iframe class=\"responsive-iframe\" src={\"https://www.youtube.com/embed/\"+dummyClimb.video}>   </iframe>\n                </div>\n\n                    <h1 className=\"display-3\">{dummyClimb.name}</h1>\n                    <p className=\"lead\">Colour: {dummyClimb.colour} </p>\n                    <p className=\"lead\">Location: {dummyClimb.location} </p>\n                    <p className=\"lead\">Setter: {dummyClimb.setter} </p>\n                    <p className=\"lead\">Date Set: {dummyClimb.date} </p>\n                    <hr className=\"my-2\" />\n                    <p>Description maybe baybe?</p>\n                    <p className=\"lead\">\n        \n                    </p>\n             </Jumbotron>\n\n        </div>\n      );\n    };\n\nexport default Climb\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"109","line":3,"column":22,"nodeType":"107","messageId":"108","endLine":3,"endColumn":28},{"ruleId":"105","severity":1,"message":"110","line":4,"column":5,"nodeType":"107","messageId":"108","endLine":4,"endColumn":11},{"ruleId":"105","severity":1,"message":"111","line":5,"column":5,"nodeType":"107","messageId":"108","endLine":5,"endColumn":10},{"ruleId":"105","severity":1,"message":"112","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"113","line":38,"column":9,"nodeType":"107","messageId":"108","endLine":38,"endColumn":18},{"ruleId":"105","severity":1,"message":"114","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"115","line":27,"column":19,"nodeType":"107","messageId":"108","endLine":27,"endColumn":25},{"ruleId":"105","severity":1,"message":"116","line":33,"column":19,"nodeType":"107","messageId":"108","endLine":33,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":21,"column":26,"nodeType":"119","messageId":"120","endLine":21,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":22,"column":26,"nodeType":"119","messageId":"120","endLine":22,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":23,"column":26,"nodeType":"119","messageId":"120","endLine":23,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":33,"column":8,"nodeType":"123","endLine":33,"endColumn":10,"suggestions":"124"},{"ruleId":"105","severity":1,"message":"112","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":37,"column":8,"nodeType":"123","endLine":37,"endColumn":10,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":23,"column":21,"nodeType":"129","endLine":23,"endColumn":111},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'climbList' is assigned a value but never used.","'useState' is defined but never used.","'config' is assigned a value but never used.","'body' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has missing dependencies: 'climbs' and 'url'. Either include them or remove the dependency array.",["133"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [url]",{"range":"138","text":"139"},"Update the dependencies array to be: [climbs, url]",{"range":"140","text":"141"},[708,710],"[url]",[798,800],"[climbs, url]"]