[{"/home/jeremy/CityClimb/CityClimb_frontend/src/App.js":"1","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/CreateClimbForm.js":"2","/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Login.js":"3","/home/jeremy/CityClimb/CityClimb_frontend/src/index.js":"4","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Navbar.js":"5","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Landing.js":"6","/home/jeremy/CityClimb/CityClimb_frontend/src/components/routing/Routes.js":"7","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Search.js":"8","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Schedule.js":"9","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Help.js":"10","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/NotFound.js":"11","/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Register.js":"12","/home/jeremy/CityClimb/CityClimb_frontend/src/components/admin/StaffDashboard.js":"13","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/ClimbList.js":"14","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/Climb.js":"15","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/SingleClimb.js":"16"},{"size":517,"mtime":1612364565340,"results":"17","hashOfConfig":"18"},{"size":4142,"mtime":1612364565340,"results":"19","hashOfConfig":"18"},{"size":1837,"mtime":1612364565340,"results":"20","hashOfConfig":"18"},{"size":602,"mtime":1612427112896,"results":"21","hashOfConfig":"18"},{"size":1928,"mtime":1612421161986,"results":"22","hashOfConfig":"18"},{"size":528,"mtime":1612364565340,"results":"23","hashOfConfig":"18"},{"size":1849,"mtime":1612425553566,"results":"24","hashOfConfig":"18"},{"size":1132,"mtime":1612423184916,"results":"25","hashOfConfig":"18"},{"size":2857,"mtime":1612422154566,"results":"26","hashOfConfig":"18"},{"size":186,"mtime":1612364565340,"results":"27","hashOfConfig":"18"},{"size":206,"mtime":1612364565340,"results":"28","hashOfConfig":"18"},{"size":3584,"mtime":1612364565340,"results":"29","hashOfConfig":"18"},{"size":171,"mtime":1612364565340,"results":"30","hashOfConfig":"18"},{"size":1427,"mtime":1612426704856,"results":"31","hashOfConfig":"18"},{"size":846,"mtime":1612426885886,"results":"32","hashOfConfig":"18"},{"size":888,"mtime":1612427146406,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"4x3elw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jeremy/CityClimb/CityClimb_frontend/src/App.js",[],["74","75"],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/CreateClimbForm.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Login.js",["76","77"],"import React, { Fragment, useState } from 'react'\n\n\nconst Login = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        staffNumber: '',\n        password: ''\n    })\n\n    const { email, staffNumber, password } = formData\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault()\n        console.log(formData)\n\n        const loggedInUser = {\n            email, \n            staffNumber,\n            password\n        }\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            const body = JSON.stringify(loggedInUser)\n\n            // const res = await axios.get('/users', body, config)\n            // console.log(res.data)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <h1>Login</h1>\n            <form className='form' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input type='text' placeholder='Email Address' name='email' value={email} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Staff Number' name='staffNumber' value={staffNumber} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Password' name='password' value={password} onChange={e => onChange(e)} required />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Login\n","/home/jeremy/CityClimb/CityClimb_frontend/src/index.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Navbar.js",["78","79","80","81"],"import React, { useState, Fragment } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div >\n      <Navbar color=\"light\" light expand=\"lg\" className=\"text-right\" style={{justify_content: \"flex-end\"}}>\n        <NavbarBrand href=\"/\"><img src=\"./icon.png\" alt=\"logo\" width=\"50px\" height=\"50px\"></img></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar >\n          <Nav navbar >\n\n            <NavItem>\n              <NavLink> <Link to=\"/\"> Home </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/search\"> Search </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/schedule\"> Schedule </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/help\"> Help </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when logged in as staff */}\n            <NavItem>\n              <NavLink> <Link to=\"/create_climb\"> Create Climb </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when no staff logged in */}\n            <NavItem>\n              <NavLink> <Link to=\"/staff_login\"> Staff Login </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_register\"> Staff Register </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_dashboard\"> Staff Dashboard </Link> </NavLink>\n            </NavItem>\n            </Nav>\n            </Collapse>\n          </Navbar>\n    </div>\n  )\n}\nexport default Example;","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Landing.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/routing/Routes.js",["82","83"],"import React from 'react'\nimport { Link, Switch, Route } from 'react-router-dom'\nimport Register from '../auth/Register'\nimport Login from '../auth/Login'\nimport Search from './../layout/Search'\nimport Schedule from './../layout/Schedule'\nimport StaffDashboard from './../admin/StaffDashboard'\nimport CreateClimbForm from './../climbs/CreateClimbForm'\nimport Help from './../layout/Help'\nimport NotFound from '../layout/NotFound'\nimport ClimbList from './../layout/ClimbList'\nimport Climb from './../climbs/Climb'\nimport SingleClimb from './../layout/SingleClimb'\n\nexport const Routes = () => {\n    return (\n        <section className=\"container\">\n            <Switch>\n                <Route exact path=\"/staff_register\" component={Register} />\n                <Route exact path=\"/staff_login\" component={Login} />\n                <Route exact path=\"/search\" component={Search} />\n                <Route exact path=\"/schedule\" component={Schedule} />\n                <Route exact path=\"/staff_dashboard\" component={StaffDashboard} />\n                <Route exact path=\"/create_climb\" component={CreateClimbForm} />\n                {/* <Route path=\"/climbs/:gym/:colour\" component={ClimbList} /> */}\n                <Route exact path=\"/climbs/:gym/:colour\" render={(props) => <ClimbList {...props} />} />\n                <Route exact path=\"/climbs/:gym/:colour/:climbId\" component={SingleClimb} />\n                <Route exact path=\"/help\" component={Help} />\n                <Route component={NotFound} /> \n            </Switch>\n        </section>\n    )\n}\n\nexport default Routes\n\n//             <Route exact path=\"/jobs/:id\" render={(props) => <EditJobPage {...props} loggedInUser={loggedInUser}/>} />\n//           <Route exact path=\"/gallery\" render={() => <GalleryPage />} />\n//           <Route exact path=\"/about\" render={() => <AboutPage />} />","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Search.js",["84"],"import React, { Fragment }  from 'react'\nimport { useForm } from \"react-hook-form\"\n\nconst Search = () => {\n    const { register, watch, errors, handleSubmit } = useForm()\n\n    const watchShowGyms = watch(\"showGyms\", true)\n    // const watchShowGreen = watch(\"green\", false)\n    // const watchShowBlue = watch(\"blue\", false)\n    // const watchShowRed = watch(\"red\", false)\n\n    const onSubmit = data => console.log(data);\n    \n\n\n    return (\n        <Fragment>\n            <p className='large'>Search</p>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"checkbox\" name=\"showGyms\" ref={register} hidden />\n                {watchShowGyms && <div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Milton\" name=\"milton\"   ref={register}/>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Newstead\" name=\"newstead\"   ref={register}/>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"West End\" name=\"westend\"    ref={register}/>\n                </div>\n            }\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Search\n","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Schedule.js",["85"],"\nimport React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap';\nimport {\n     Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst Schedule = () => {\n\n\n    const [climbs, setClimbs] = useState([])\n\n    // const fetchClimbs = () => {\n    //     fetch(\"http://localhost:8000/climbs/\")\n    //     .then(res => res.json())\n    //     .then(data => console.log(data))\n    //     .catch(e => console.log(e))\n    // }\n\n    useEffect(() => {\n        // let isMounted = true\n        // fetchClimbs()\n        fetch(\"http://localhost:8000/climbs/\")\n        .then(res => res.json())\n        .then(data => { \n            console.log(data)\n            // if (isMounted == true) \n            setClimbs(data)\n        })\n        .catch(e => console.log(e))\n       \n        return () => {\n            // return () => { isMounted = false }\n        }\n    }, [])\n    \n\n    let climbList = [\n        { \"name\": \"Dungeon\", \"colour\": \"Red\", \"image\": \"https://imgur.com/RTFOOHR\" },\n        { \"name\": \"Zeplin\", \"colour\": \"Blue\", \"image\": \"https://imgur.com/yln0oYC\" },\n        { \"name\": \"Death Valley\", \"colour\": \"Green\", \"image\": \"https://imgur.com/ZHKnVr8\" },\n        { \"name\": \"Reningar's Revenge\", \"colour\": \"Purple\", \"image\": \"https://imgur.com/Hrzbo49\" },\n        { \"name\": \"In the Begins\", \"colour\": \"Black\", \"image\": \"https://imgur.com/Ld5Ux3g\" },\n        { \"name\": \"Christmas Special\", \"colour\": \"ReGreen\", \"image\": \"https://imgur.com/rg7RAdm\" },\n        { \"name\": \"Climb or Die\", \"colour\": \"Rainbow\", \"image\": \"https://imgur.com/aj9vfmu\" },\n        { \"name\": \"Pleasures Peak\", \"colour\": \"Yellow\", \"image\": \"https://imgur.com/hTkpXvw\" }\n      ]\n\n    return (\n        <>\n\n            <br />\n\n            {/* id gymn wall colour image video  */}\n\n            <Row gutter={40}>\n                {(climbs).map(climb => \n\n                    <Col // Responsive settings. Each row has a span of 12\n                    xs={{ span: 6 }} sm={{ span: 6 }} md={{ span: 6 }} // 2 cards per row\n                    lg={{ span: 4 }} xl={{ span: 4 }} // 3 cards per row\n                    >\n                        \n                    <Card> \n                        <CardImg top width=\"100%\" src={\"http://res.cloudinary.com/coderacademy/image/upload\"+climb.image} alt=\"Card image cap\" />\n                        <CardBody>\n                        <CardTitle tag=\"h5\">{climb.name}</CardTitle>\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{climb.colour}</CardSubtitle>\n                        <CardText>{climb._id}</CardText>\n                        <Button>Button</Button>\n                        </CardBody>\n                    </Card>\n                    <br />\n                    </Col>\n                )}\n            </Row>\n\n        </>\n      );\n    };\n\nexport default Schedule\n","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Help.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/NotFound.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Register.js",["86"],"import React, { Fragment, useState, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\n\n\nconst Register = () => {\n    const { register, handleSubmit, errors, watch } = useForm()\n    const password = useRef({})\n    \n    const onSubmit = (data) => {\n        const formData = new FormData()\n        password.current = watch(\"password\", \"\")\n\n        formData.append(\"name\", data.name)\n        formData.append(\"email\", data.email)\n        formData.append(\"staffNumber\", data.staffNumber)\n        formData.append(\"password\", data.password)\n        formData.append(\"confirmPassword\", data.confirmPassword)\n        formData.append(\"image\", data.image[0])\n\n        console.log(formData)\n\n        fetch('http://localhost:8000/users', {\n            method: 'POST',\n            body: formData,\n            // headers: {\n\n            // }\n        })\n    }\n    \n\n\n    return (\n        <Fragment>\n            <h1>Register</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='First Name' name='firstName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Last Name' name='lastName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Email Address' name='email' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Staff Number' name='staffNumber' />\n                </div>\n                <div className='form-group'>\n                    {/* <input type='password' ref={register({ required: true })} placeholder='Password' name='password' /> */}\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({\n                        required: \"You must specify a password\",\n                        minLength: {\n                            value: 8,\n                            message: \"Password must have at least 8 characters\"\n                        }\n                        })}\n                    />\n                </div>\n                {errors.password && <p>{errors.password.message}</p>}\n                <div className='form-group'>\n                    {/* <input type='password' placeholder='Confirm Password' name='confirmPassword' ref={register({\n                        required: true,\n                        validate: value => \n                            value === password.current || \"Passwords must match\"\n                    })} /> */}\n                    <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                        ref={register({\n                        validate: value =>\n                            value === password.current || \"The passwords do not match\"\n                        })}\n                    />\n                </div>\n                {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n\n                <input ref={register({ required: true })} type=\"file\" name=\"image\" />\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/home/jeremy/CityClimb/CityClimb_frontend/src/components/admin/StaffDashboard.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/ClimbList.js",["87","88"],"import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Climb from '../climbs/Climb'\n\n\nconst ClimbList = (props) => {\n\n    const API_ENDPOINT = \"http://localhost:8000\"\n    const { gym, colour } = props.match.params\n\n    // console.log(props)\n\n    const url = `${API_ENDPOINT}/climbs/${gym}/${colour}`\n\n    // console.log(url)\n\n    const [climbs, setClimbs] = useState([])\n\n    useEffect(() => {\n        console.log(\"Mounted\")\n        console.log(climbs)\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            console.log(data)\n\n            setClimbs(data)\n        })\n        .catch(e => console.log(e))\n       \n        return () => {\n            console.log(\"Unmounted\")\n        }\n    }, [])\n    \n    return (\n        <>\n            Hello\n            <br />\n\n\n            <Row gutter={40}>\n                {(climbs).map(climb => \n\n                    <Col // Responsive settings. Each row has a span of 12\n                    xs={{ span: 6 }} sm={{ span: 6 }} md={{ span: 6 }} // 2 cards per row\n                    lg={{ span: 4 }} xl={{ span: 4 }} // 3 cards per row\n                    >\n\n                        <Climb climb={climb} />\n                    \n                    <br />\n                    </Col>\n                )}\n            </Row>\n\n        </>\n      );\n\n} \n\nexport default ClimbList","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/Climb.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/SingleClimb.js",["89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":27,"column":19,"nodeType":"96","messageId":"97","endLine":27,"endColumn":25},{"ruleId":"94","severity":1,"message":"98","line":33,"column":19,"nodeType":"96","messageId":"97","endLine":33,"endColumn":23},{"ruleId":"94","severity":1,"message":"99","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":35},{"ruleId":"94","severity":1,"message":"100","line":3,"column":22,"nodeType":"96","messageId":"97","endLine":3,"endColumn":28},{"ruleId":"94","severity":1,"message":"101","line":4,"column":5,"nodeType":"96","messageId":"97","endLine":4,"endColumn":11},{"ruleId":"94","severity":1,"message":"102","line":5,"column":5,"nodeType":"96","messageId":"97","endLine":5,"endColumn":10},{"ruleId":"94","severity":1,"message":"103","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"104","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":13},{"ruleId":"94","severity":1,"message":"105","line":5,"column":30,"nodeType":"96","messageId":"97","endLine":5,"endColumn":36},{"ruleId":"94","severity":1,"message":"106","line":39,"column":9,"nodeType":"96","messageId":"97","endLine":39,"endColumn":18},{"ruleId":"94","severity":1,"message":"107","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":35},{"ruleId":"94","severity":1,"message":"103","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":37,"column":8,"nodeType":"110","endLine":37,"endColumn":10,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":32,"column":8,"nodeType":"110","endLine":32,"endColumn":10,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'config' is assigned a value but never used.","Identifier","unusedVar","'body' is assigned a value but never used.","'Fragment' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Climb' is defined but never used.","'errors' is assigned a value but never used.","'climbList' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'climbs' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [climbs, url]",{"range":"122","text":"123"},"Update the dependencies array to be: [url]",{"range":"124","text":"125"},[811,813],"[climbs, url]",[712,714],"[url]"]