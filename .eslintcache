[{"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/forms/CreateClimbForm.js":"1","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Register.js":"2","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Navbar.js":"3","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/index.js":"4","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/NotFound.js":"5","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/admin/StaffDashboard.js":"6","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/routing/Routes.js":"7","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/App.js":"8","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Login.js":"9"},{"size":4144,"mtime":1612230495564,"results":"10","hashOfConfig":"11"},{"size":3584,"mtime":1612243421827,"results":"12","hashOfConfig":"11"},{"size":1254,"mtime":1612236237514,"results":"13","hashOfConfig":"11"},{"size":601,"mtime":1612230012647,"results":"14","hashOfConfig":"11"},{"size":206,"mtime":1612230012585,"results":"15","hashOfConfig":"11"},{"size":171,"mtime":1612230012577,"results":"16","hashOfConfig":"11"},{"size":839,"mtime":1612312275587,"results":"17","hashOfConfig":"11"},{"size":1136,"mtime":1612242989287,"results":"18","hashOfConfig":"11"},{"size":1837,"mtime":1612230012580,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c0wafy",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/forms/CreateClimbForm.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Register.js",["40"],"import React, { Fragment, useState, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\n\n\nconst Register = () => {\n    const { register, handleSubmit, errors, watch } = useForm()\n    const password = useRef({})\n    \n    const onSubmit = (data) => {\n        const formData = new FormData()\n        password.current = watch(\"password\", \"\")\n\n        formData.append(\"name\", data.name)\n        formData.append(\"email\", data.email)\n        formData.append(\"staffNumber\", data.staffNumber)\n        formData.append(\"password\", data.password)\n        formData.append(\"confirmPassword\", data.confirmPassword)\n        formData.append(\"image\", data.image[0])\n\n        console.log(formData)\n\n        fetch('http://localhost:8000/users', {\n            method: 'POST',\n            body: formData,\n            // headers: {\n\n            // }\n        })\n    }\n    \n\n\n    return (\n        <Fragment>\n            <h1>Register</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='First Name' name='firstName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Last Name' name='lastName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Email Address' name='email' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Staff Number' name='staffNumber' />\n                </div>\n                <div className='form-group'>\n                    {/* <input type='password' ref={register({ required: true })} placeholder='Password' name='password' /> */}\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({\n                        required: \"You must specify a password\",\n                        minLength: {\n                            value: 8,\n                            message: \"Password must have at least 8 characters\"\n                        }\n                        })}\n                    />\n                </div>\n                {errors.password && <p>{errors.password.message}</p>}\n                <div className='form-group'>\n                    {/* <input type='password' placeholder='Confirm Password' name='confirmPassword' ref={register({\n                        required: true,\n                        validate: value => \n                            value === password.current || \"Passwords must match\"\n                    })} /> */}\n                    <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                        ref={register({\n                        validate: value =>\n                            value === password.current || \"The passwords do not match\"\n                        })}\n                    />\n                </div>\n                {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n\n                <input ref={register({ required: true })} type=\"file\" name=\"image\" />\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Navbar.js",["41","42","43","44","45"],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/index.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/NotFound.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/admin/StaffDashboard.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/routing/Routes.js",["46"],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/App.js",["47","48"],"\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\n\nimport Navbar from './components/layout/Navbar'\nimport Dropdown from './components/layout/Dropdown'\nimport Landing from './components/layout/Landing'\n\nimport CreateClimbForm  from './components/forms/CreateClimbForm.js'\nimport Routes from './components/routing/Routes'\n\n\n\nconst App = () => {\n\n  // Burger menu functions\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    const hideMenu = () => {\n      if (window.innerWidth > 768 && isOpen) {\n        setIsOpen(false);\n        console.log('i resized');\n      }\n    };\n\n    window.addEventListener('resize', hideMenu);\n\n    return () => {\n      window.removeEventListener('resize', hideMenu);\n    };\n  });\n\n  return (\n\n    <>\n      <Router>\n        <Navbar toggle={toggle}/>\n            <Switch>\n              <Route exact path=\"/\" component={Landing} />\n              <Route component={Routes} />\n            </Switch>\n      </Router>\n    </>\n  \n  )\n}\n\nexport default App\n","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Login.js",["49","50"],{"ruleId":"51","severity":1,"message":"52","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":35},{"ruleId":"51","severity":1,"message":"55","line":3,"column":22,"nodeType":"53","messageId":"54","endLine":3,"endColumn":28},{"ruleId":"51","severity":1,"message":"56","line":4,"column":5,"nodeType":"53","messageId":"54","endLine":4,"endColumn":11},{"ruleId":"51","severity":1,"message":"57","line":5,"column":5,"nodeType":"53","messageId":"54","endLine":5,"endColumn":10},{"ruleId":"51","severity":1,"message":"58","line":10,"column":11,"nodeType":"53","messageId":"54","endLine":10,"endColumn":20},{"ruleId":"51","severity":1,"message":"59","line":22,"column":11,"nodeType":"53","messageId":"54","endLine":22,"endColumn":21},{"ruleId":"51","severity":1,"message":"60","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"51","severity":1,"message":"61","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":16},{"ruleId":"51","severity":1,"message":"62","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":23},{"ruleId":"51","severity":1,"message":"63","line":27,"column":19,"nodeType":"53","messageId":"54","endLine":27,"endColumn":25},{"ruleId":"51","severity":1,"message":"64","line":33,"column":19,"nodeType":"53","messageId":"54","endLine":33,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'authLinks' is assigned a value but never used.","'guestLinks' is assigned a value but never used.","'Link' is defined but never used.","'Dropdown' is defined but never used.","'CreateClimbForm' is defined but never used.","'config' is assigned a value but never used.","'body' is assigned a value but never used."]