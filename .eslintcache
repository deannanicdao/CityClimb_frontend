[{"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/index.js":"1","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/App.js":"2","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Landing.js":"3","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Navbar.js":"4","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/routing/Routes.js":"5","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/NotFound.js":"6","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Login.js":"7","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Register.js":"8","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/admin/StaffDashboard.js":"9","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Search.js":"10","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Help.js":"11","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Schedule.js":"12","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/climbs/CreateClimbForm.js":"13"},{"size":645,"mtime":1612312336870,"results":"14","hashOfConfig":"15"},{"size":517,"mtime":1612318239481,"results":"16","hashOfConfig":"15"},{"size":528,"mtime":1612312336862,"results":"17","hashOfConfig":"15"},{"size":1928,"mtime":1612317208581,"results":"18","hashOfConfig":"15"},{"size":1162,"mtime":1612318193750,"results":"19","hashOfConfig":"15"},{"size":206,"mtime":1612230012585,"results":"20","hashOfConfig":"15"},{"size":1837,"mtime":1612230012580,"results":"21","hashOfConfig":"15"},{"size":3584,"mtime":1612243421827,"results":"22","hashOfConfig":"15"},{"size":171,"mtime":1612230012577,"results":"23","hashOfConfig":"15"},{"size":430,"mtime":1612316653646,"results":"24","hashOfConfig":"15"},{"size":186,"mtime":1612312336860,"results":"25","hashOfConfig":"15"},{"size":198,"mtime":1612312336867,"results":"26","hashOfConfig":"15"},{"size":4142,"mtime":1612312336858,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1c9wjbv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/index.js",[],["59","60"],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/App.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Landing.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Navbar.js",["61","62","63","64"],"import React, { useState, Fragment } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div >\n      <Navbar color=\"light\" light expand=\"lg\" className=\"text-right\" style={{justify_content: \"flex-end\"}}>\n        <NavbarBrand href=\"/\"><img src=\"./icon.png\" alt=\"logo\" width=\"50px\" height=\"50px\"></img></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar >\n          <Nav navbar >\n\n            <NavItem>\n              <NavLink> <Link to=\"/\"> Home </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/search\"> Search </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/schedule\"> Schedule </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/help\"> Help </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when logged in as staff */}\n            <NavItem>\n              <NavLink> <Link to=\"/create_climb\"> Create Climb </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when no staff logged in */}\n            <NavItem>\n              <NavLink> <Link to=\"/staff_login\"> Staff Login </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_register\"> Staff Register </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_dashboard\"> Staff Dashboard </Link> </NavLink>\n            </NavItem>\n            </Nav>\n            </Collapse>\n          </Navbar>\n    </div>\n  )\n}\nexport default Example;","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/routing/Routes.js",["65"],"import React from 'react'\nimport { Link, Switch, Route } from 'react-router-dom'\nimport Register from '../auth/Register'\nimport Login from '../auth/Login'\nimport Search from './../layout/Search'\nimport Schedule from './../layout/Schedule'\nimport StaffDashboard from './../admin/StaffDashboard'\nimport CreateClimbForm from './../climbs/CreateClimbForm'\nimport Help from './../layout/Help'\nimport NotFound from '../layout/NotFound'\n\nexport const Routes = () => {\n    return (\n        <section className=\"container\">\n            <Switch>\n                <Route exact path=\"/staff_register\" component={Register} />\n                <Route exact path=\"/staff_login\" component={Login} />\n                <Route exact path=\"/search\" component={Search} />\n                <Route exact path=\"/schedule\" component={Schedule} />\n                <Route exact path=\"/staff_dashboard\" component={StaffDashboard} />\n                <Route exact path=\"/create_climb\" component={CreateClimbForm} />\n                <Route exact path=\"/help\" component={Help} />\n                <Route component={NotFound} /> \n            </Switch>\n        </section>\n    )\n}\n\nexport default Routes","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/NotFound.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Login.js",["66","67"],"import React, { Fragment, useState } from 'react'\n\n\nconst Login = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        staffNumber: '',\n        password: ''\n    })\n\n    const { email, staffNumber, password } = formData\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault()\n        console.log(formData)\n\n        const loggedInUser = {\n            email, \n            staffNumber,\n            password\n        }\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            const body = JSON.stringify(loggedInUser)\n\n            // const res = await axios.get('/users', body, config)\n            // console.log(res.data)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <h1>Login</h1>\n            <form className='form' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input type='text' placeholder='Email Address' name='email' value={email} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Staff Number' name='staffNumber' value={staffNumber} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Password' name='password' value={password} onChange={e => onChange(e)} required />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/auth/Register.js",["68"],"import React, { Fragment, useState, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\n\n\nconst Register = () => {\n    const { register, handleSubmit, errors, watch } = useForm()\n    const password = useRef({})\n    \n    const onSubmit = (data) => {\n        const formData = new FormData()\n        password.current = watch(\"password\", \"\")\n\n        formData.append(\"name\", data.name)\n        formData.append(\"email\", data.email)\n        formData.append(\"staffNumber\", data.staffNumber)\n        formData.append(\"password\", data.password)\n        formData.append(\"confirmPassword\", data.confirmPassword)\n        formData.append(\"image\", data.image[0])\n\n        console.log(formData)\n\n        fetch('http://localhost:8000/users', {\n            method: 'POST',\n            body: formData,\n            // headers: {\n\n            // }\n        })\n    }\n    \n\n\n    return (\n        <Fragment>\n            <h1>Register</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='First Name' name='firstName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Last Name' name='lastName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Email Address' name='email' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Staff Number' name='staffNumber' />\n                </div>\n                <div className='form-group'>\n                    {/* <input type='password' ref={register({ required: true })} placeholder='Password' name='password' /> */}\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({\n                        required: \"You must specify a password\",\n                        minLength: {\n                            value: 8,\n                            message: \"Password must have at least 8 characters\"\n                        }\n                        })}\n                    />\n                </div>\n                {errors.password && <p>{errors.password.message}</p>}\n                <div className='form-group'>\n                    {/* <input type='password' placeholder='Confirm Password' name='confirmPassword' ref={register({\n                        required: true,\n                        validate: value => \n                            value === password.current || \"Passwords must match\"\n                    })} /> */}\n                    <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                        ref={register({\n                        validate: value =>\n                            value === password.current || \"The passwords do not match\"\n                        })}\n                    />\n                </div>\n                {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n\n                <input ref={register({ required: true })} type=\"file\" name=\"image\" />\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/admin/StaffDashboard.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Search.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Help.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/layout/Schedule.js",[],"/Users/deannanicdao/Projects/T3A2/T3A2-B/frontend/city-climb/src/components/climbs/CreateClimbForm.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"77","line":3,"column":22,"nodeType":"75","messageId":"76","endLine":3,"endColumn":28},{"ruleId":"73","severity":1,"message":"78","line":4,"column":5,"nodeType":"75","messageId":"76","endLine":4,"endColumn":11},{"ruleId":"73","severity":1,"message":"79","line":5,"column":5,"nodeType":"75","messageId":"76","endLine":5,"endColumn":10},{"ruleId":"73","severity":1,"message":"80","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"81","line":27,"column":19,"nodeType":"75","messageId":"76","endLine":27,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":33,"column":19,"nodeType":"75","messageId":"76","endLine":33,"endColumn":23},{"ruleId":"73","severity":1,"message":"83","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'config' is assigned a value but never used.","'body' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]