[{"/home/jeremy/CityClimb/CityClimb_frontend/src/index.js":"1","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Help.js":"2","/home/jeremy/CityClimb/CityClimb_frontend/src/components/routing/Routes.js":"3","/home/jeremy/CityClimb/CityClimb_frontend/src/App.js":"4","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Landing.js":"5","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Navbar.js":"6","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Schedule.js":"7","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Search.js":"8","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/NotFound.js":"9","/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Register.js":"10","/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Login.js":"11","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/CreateClimbForm.js":"12","/home/jeremy/CityClimb/CityClimb_frontend/src/components/admin/StaffDashboard.js":"13","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/Climb.js":"14","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/Climbs.js":"15"},{"size":645,"mtime":1612316658359,"results":"16","hashOfConfig":"17"},{"size":186,"mtime":1612316658311,"results":"18","hashOfConfig":"17"},{"size":1268,"mtime":1612322425314,"results":"19","hashOfConfig":"17"},{"size":517,"mtime":1612319397389,"results":"20","hashOfConfig":"17"},{"size":528,"mtime":1612316658322,"results":"21","hashOfConfig":"17"},{"size":1928,"mtime":1612319397403,"results":"22","hashOfConfig":"17"},{"size":198,"mtime":1612316658339,"results":"23","hashOfConfig":"17"},{"size":430,"mtime":1612319397414,"results":"24","hashOfConfig":"17"},{"size":206,"mtime":1612230495740,"results":"25","hashOfConfig":"17"},{"size":3584,"mtime":1612316658299,"results":"26","hashOfConfig":"17"},{"size":1837,"mtime":1612230495732,"results":"27","hashOfConfig":"17"},{"size":4142,"mtime":1612319397392,"results":"28","hashOfConfig":"17"},{"size":171,"mtime":1612230495724,"results":"29","hashOfConfig":"17"},{"size":504,"mtime":1612321545465,"results":"30","hashOfConfig":"17"},{"size":958,"mtime":1612322871894,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4x3elw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jeremy/CityClimb/CityClimb_frontend/src/index.js",[],["67","68"],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Help.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/routing/Routes.js",["69"],"/home/jeremy/CityClimb/CityClimb_frontend/src/App.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Landing.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Navbar.js",["70","71","72","73"],"import React, { useState, Fragment } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div >\n      <Navbar color=\"light\" light expand=\"lg\" className=\"text-right\" style={{justify_content: \"flex-end\"}}>\n        <NavbarBrand href=\"/\"><img src=\"./icon.png\" alt=\"logo\" width=\"50px\" height=\"50px\"></img></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar >\n          <Nav navbar >\n\n            <NavItem>\n              <NavLink> <Link to=\"/\"> Home </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/search\"> Search </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/schedule\"> Schedule </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/help\"> Help </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when logged in as staff */}\n            <NavItem>\n              <NavLink> <Link to=\"/create_climb\"> Create Climb </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when no staff logged in */}\n            <NavItem>\n              <NavLink> <Link to=\"/staff_login\"> Staff Login </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_register\"> Staff Register </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_dashboard\"> Staff Dashboard </Link> </NavLink>\n            </NavItem>\n            </Nav>\n            </Collapse>\n          </Navbar>\n    </div>\n  )\n}\nexport default Example;","/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Schedule.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/Search.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/layout/NotFound.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Register.js",["74"],"import React, { Fragment, useState, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\n\n\nconst Register = () => {\n    const { register, handleSubmit, errors, watch } = useForm()\n    const password = useRef({})\n    \n    const onSubmit = (data) => {\n        const formData = new FormData()\n        password.current = watch(\"password\", \"\")\n\n        formData.append(\"name\", data.name)\n        formData.append(\"email\", data.email)\n        formData.append(\"staffNumber\", data.staffNumber)\n        formData.append(\"password\", data.password)\n        formData.append(\"confirmPassword\", data.confirmPassword)\n        formData.append(\"image\", data.image[0])\n\n        console.log(formData)\n\n        fetch('http://localhost:8000/users', {\n            method: 'POST',\n            body: formData,\n            // headers: {\n\n            // }\n        })\n    }\n    \n\n\n    return (\n        <Fragment>\n            <h1>Register</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='First Name' name='firstName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Last Name' name='lastName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Email Address' name='email' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Staff Number' name='staffNumber' />\n                </div>\n                <div className='form-group'>\n                    {/* <input type='password' ref={register({ required: true })} placeholder='Password' name='password' /> */}\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({\n                        required: \"You must specify a password\",\n                        minLength: {\n                            value: 8,\n                            message: \"Password must have at least 8 characters\"\n                        }\n                        })}\n                    />\n                </div>\n                {errors.password && <p>{errors.password.message}</p>}\n                <div className='form-group'>\n                    {/* <input type='password' placeholder='Confirm Password' name='confirmPassword' ref={register({\n                        required: true,\n                        validate: value => \n                            value === password.current || \"Passwords must match\"\n                    })} /> */}\n                    <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                        ref={register({\n                        validate: value =>\n                            value === password.current || \"The passwords do not match\"\n                        })}\n                    />\n                </div>\n                {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n\n                <input ref={register({ required: true })} type=\"file\" name=\"image\" />\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/home/jeremy/CityClimb/CityClimb_frontend/src/components/auth/Login.js",["75","76"],"import React, { Fragment, useState } from 'react'\n\n\nconst Login = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        staffNumber: '',\n        password: ''\n    })\n\n    const { email, staffNumber, password } = formData\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault()\n        console.log(formData)\n\n        const loggedInUser = {\n            email, \n            staffNumber,\n            password\n        }\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            const body = JSON.stringify(loggedInUser)\n\n            // const res = await axios.get('/users', body, config)\n            // console.log(res.data)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <h1>Login</h1>\n            <form className='form' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input type='text' placeholder='Email Address' name='email' value={email} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Staff Number' name='staffNumber' value={staffNumber} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Password' name='password' value={password} onChange={e => onChange(e)} required />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Login\n","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/CreateClimbForm.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/admin/StaffDashboard.js",[],"/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/Climb.js",["77"],"import React from 'react'\nimport { useParams } from \"react-router-dom\"\n\nconst Climb = () => {\n    // const fetchClimb = climbId => {\n    //     fetch(`http://localhost:8000/climbs/${climbId}`)\n    //     .then(res => res.json())\n    //     // .then(data => setClimbData(data))\n    //     .catch(e => console.log(e))\n    // }\n    const params = useParams()\n    return (\n        <>\n            <div>\n                hello\n            </div>\n    \n        </>\n    )\n}\n\n\n\n// fetchClimb()\n\nexport default Climb","/home/jeremy/CityClimb/CityClimb_frontend/src/components/climbs/Climbs.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":35},{"ruleId":"82","severity":1,"message":"87","line":3,"column":22,"nodeType":"84","messageId":"85","endLine":3,"endColumn":28},{"ruleId":"82","severity":1,"message":"88","line":4,"column":5,"nodeType":"84","messageId":"85","endLine":4,"endColumn":11},{"ruleId":"82","severity":1,"message":"89","line":5,"column":5,"nodeType":"84","messageId":"85","endLine":5,"endColumn":10},{"ruleId":"82","severity":1,"message":"90","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":35},{"ruleId":"82","severity":1,"message":"91","line":27,"column":19,"nodeType":"84","messageId":"85","endLine":27,"endColumn":25},{"ruleId":"82","severity":1,"message":"92","line":33,"column":19,"nodeType":"84","messageId":"85","endLine":33,"endColumn":23},{"ruleId":"82","severity":1,"message":"93","line":11,"column":11,"nodeType":"84","messageId":"85","endLine":11,"endColumn":17},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useState' is defined but never used.","'config' is assigned a value but never used.","'body' is assigned a value but never used.","'params' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]