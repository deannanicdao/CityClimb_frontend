[{"/Users/jellis/final_app/CityClimb_frontend/src/index.js":"1","/Users/jellis/final_app/CityClimb_frontend/src/App.js":"2","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Schedule.js":"3","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Landing.js":"4","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Help.js":"5","/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Login.js":"6","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Navbar.js":"7","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Search.js":"8","/Users/jellis/final_app/CityClimb_frontend/src/components/routing/Routes.js":"9","/Users/jellis/final_app/CityClimb_frontend/src/components/admin/StaffDashboard.js":"10","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/NotFound.js":"11","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/CreateClimbForm.js":"12","/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Register.js":"13","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Climb.js":"14"},{"size":645,"mtime":1612241455805,"results":"15","hashOfConfig":"16"},{"size":517,"mtime":1612319205240,"results":"17","hashOfConfig":"16"},{"size":2856,"mtime":1612328622172,"results":"18","hashOfConfig":"16"},{"size":528,"mtime":1612243226879,"results":"19","hashOfConfig":"16"},{"size":186,"mtime":1612240314374,"results":"20","hashOfConfig":"16"},{"size":1837,"mtime":1612230715795,"results":"21","hashOfConfig":"16"},{"size":2052,"mtime":1612326226760,"results":"22","hashOfConfig":"16"},{"size":440,"mtime":1612318682689,"results":"23","hashOfConfig":"16"},{"size":1271,"mtime":1612326163022,"results":"24","hashOfConfig":"16"},{"size":171,"mtime":1612230715795,"results":"25","hashOfConfig":"16"},{"size":206,"mtime":1612230715797,"results":"26","hashOfConfig":"16"},{"size":4142,"mtime":1612318682690,"results":"27","hashOfConfig":"16"},{"size":3584,"mtime":1612318682680,"results":"28","hashOfConfig":"16"},{"size":1384,"mtime":1612326517349,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ezi0h2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/Users/jellis/final_app/CityClimb_frontend/src/index.js",[],["64","65"],"/Users/jellis/final_app/CityClimb_frontend/src/App.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Schedule.js",["66"],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Landing.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Help.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Login.js",["67","68"],"import React, { Fragment, useState } from 'react'\n\n\nconst Login = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        staffNumber: '',\n        password: ''\n    })\n\n    const { email, staffNumber, password } = formData\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault()\n        console.log(formData)\n\n        const loggedInUser = {\n            email, \n            staffNumber,\n            password\n        }\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            const body = JSON.stringify(loggedInUser)\n\n            // const res = await axios.get('/users', body, config)\n            // console.log(res.data)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <h1>Login</h1>\n            <form className='form' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input type='text' placeholder='Email Address' name='email' value={email} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Staff Number' name='staffNumber' value={staffNumber} onChange={e => onChange(e)} required />\n                </div>\n                <div className='form-group'>\n                    <input type='text' placeholder='Password' name='password' value={password} onChange={e => onChange(e)} required />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Navbar.js",["69","70","71","72"],"import React, { useState, Fragment } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div >\n      <Navbar color=\"light\" light expand=\"lg\" className=\"text-right\" style={{justify_content: \"flex-end\"}}>\n        <NavbarBrand href=\"/\"><img src=\"./icon.png\" alt=\"logo\" width=\"50px\" height=\"50px\"></img></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar >\n          <Nav navbar >\n\n            <NavItem>\n              <NavLink> <Link to=\"/\"> Home </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/search\"> Search </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/schedule\"> Schedule </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/help\"> Help </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when logged in as staff */}\n            <NavItem>\n              <NavLink> <Link to=\"/create_climb\"> Create Climb </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when no staff logged in */}\n            <NavItem>\n              <NavLink> <Link to=\"/staff_login\"> Staff Login </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_register\"> Staff Register </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_dashboard\"> Staff Dashboard </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/climb_template\"> Climb </Link> </NavLink>\n            </NavItem>\n\n            </Nav>\n            </Collapse>\n          </Navbar>\n    </div>\n  )\n}\nexport default Example;","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Search.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/routing/Routes.js",["73"],"import React from 'react'\nimport { Link, Switch, Route } from 'react-router-dom'\nimport Register from '../auth/Register'\nimport Login from '../auth/Login'\nimport Search from './../layout/Search'\nimport Schedule from './../layout/Schedule'\nimport StaffDashboard from './../admin/StaffDashboard'\nimport CreateClimbForm from './../climbs/CreateClimbForm'\nimport Help from './../layout/Help'\nimport NotFound from '../layout/NotFound'\nimport Climb from '../layout/Climb'\n\nexport const Routes = () => {\n    return (\n        <section className=\"container\">\n            <Switch>\n                <Route exact path=\"/staff_register\" component={Register} />\n                <Route exact path=\"/staff_login\" component={Login} />\n                <Route exact path=\"/search\" component={Search} />\n                <Route exact path=\"/schedule\" component={Schedule} />\n                <Route exact path=\"/staff_dashboard\" component={StaffDashboard} />\n                <Route exact path=\"/create_climb\" component={CreateClimbForm} />\n                <Route exact path=\"/help\" component={Help} />\n                <Route exact path=\"/climb_template\" component={Climb} />\n                <Route component={NotFound} /> \n            </Switch>\n        </section>\n    )\n}\n\nexport default Routes","/Users/jellis/final_app/CityClimb_frontend/src/components/admin/StaffDashboard.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/NotFound.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/CreateClimbForm.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Register.js",["74"],"import React, { Fragment, useState, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\n\n\nconst Register = () => {\n    const { register, handleSubmit, errors, watch } = useForm()\n    const password = useRef({})\n    \n    const onSubmit = (data) => {\n        const formData = new FormData()\n        password.current = watch(\"password\", \"\")\n\n        formData.append(\"name\", data.name)\n        formData.append(\"email\", data.email)\n        formData.append(\"staffNumber\", data.staffNumber)\n        formData.append(\"password\", data.password)\n        formData.append(\"confirmPassword\", data.confirmPassword)\n        formData.append(\"image\", data.image[0])\n\n        console.log(formData)\n\n        fetch('http://localhost:8000/users', {\n            method: 'POST',\n            body: formData,\n            // headers: {\n\n            // }\n        })\n    }\n    \n\n\n    return (\n        <Fragment>\n            <h1>Register</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='First Name' name='firstName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Last Name' name='lastName' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Email Address' name='email' />\n                </div>\n                <div className='form-group'>\n                    <input type='text' ref={register({ required: true })} placeholder='Staff Number' name='staffNumber' />\n                </div>\n                <div className='form-group'>\n                    {/* <input type='password' ref={register({ required: true })} placeholder='Password' name='password' /> */}\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({\n                        required: \"You must specify a password\",\n                        minLength: {\n                            value: 8,\n                            message: \"Password must have at least 8 characters\"\n                        }\n                        })}\n                    />\n                </div>\n                {errors.password && <p>{errors.password.message}</p>}\n                <div className='form-group'>\n                    {/* <input type='password' placeholder='Confirm Password' name='confirmPassword' ref={register({\n                        required: true,\n                        validate: value => \n                            value === password.current || \"Passwords must match\"\n                    })} /> */}\n                    <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                        ref={register({\n                        validate: value =>\n                            value === password.current || \"The passwords do not match\"\n                        })}\n                    />\n                </div>\n                {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n\n                <input ref={register({ required: true })} type=\"file\" name=\"image\" />\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Climb.js",["75"],"import React from 'react'\nimport {\n    Jumbotron\n} from 'reactstrap';\n\nconst Climb = () => {\n\n    let dummyClimb = {\n        \"name\": \"The Demigorgon\",\n        \"colour\": \"Red\",\n        \"location\": \"West End\",\n        \"setter\": \"Brad Pitt\",\n        \"date\": \"12/01/2021\",\n        \"description\": \"Known as the Prince of Demons, a self-proclaimed title, but one that is acknowledged by mortals and even his fellow demons because of his power and influence.\",\n        \"video\": \"tgbNymZ7vqY\"\n    }\n\n    return (\n        <div  className=\"climbs\">\n        <br />\n            <Jumbotron>\n                <div class=\"yt-container\">\n                    <iframe class=\"responsive-iframe\" src={\"https://www.youtube.com/embed/\"+dummyClimb.video}>   </iframe>\n                </div>\n\n                    <h1 className=\"display-3\">{dummyClimb.name}</h1>\n                    <p className=\"lead\">Colour: {dummyClimb.colour} </p>\n                    <p className=\"lead\">Location: {dummyClimb.location} </p>\n                    <p className=\"lead\">Setter: {dummyClimb.setter} </p>\n                    <p className=\"lead\">Date Set: {dummyClimb.date} </p>\n                    <hr className=\"my-2\" />\n                    <p>Description maybe baybe?</p>\n                    <p className=\"lead\">\n        \n                    </p>\n             </Jumbotron>\n\n        </div>\n      );\n    };\n\nexport default Climb\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":38,"column":9,"nodeType":"82","messageId":"83","endLine":38,"endColumn":18},{"ruleId":"80","severity":1,"message":"84","line":27,"column":19,"nodeType":"82","messageId":"83","endLine":27,"endColumn":25},{"ruleId":"80","severity":1,"message":"85","line":33,"column":19,"nodeType":"82","messageId":"83","endLine":33,"endColumn":23},{"ruleId":"80","severity":1,"message":"86","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":35},{"ruleId":"80","severity":1,"message":"87","line":3,"column":22,"nodeType":"82","messageId":"83","endLine":3,"endColumn":28},{"ruleId":"80","severity":1,"message":"88","line":4,"column":5,"nodeType":"82","messageId":"83","endLine":4,"endColumn":11},{"ruleId":"80","severity":1,"message":"89","line":5,"column":5,"nodeType":"82","messageId":"83","endLine":5,"endColumn":10},{"ruleId":"80","severity":1,"message":"90","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"91","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":23,"column":21,"nodeType":"94","endLine":23,"endColumn":111},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'climbList' is assigned a value but never used.","Identifier","unusedVar","'config' is assigned a value but never used.","'body' is assigned a value but never used.","'Fragment' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]