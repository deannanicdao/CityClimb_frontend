[{"/Users/jellis/final_app/CityClimb_frontend/src/index.js":"1","/Users/jellis/final_app/CityClimb_frontend/src/App.js":"2","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Navbar.js":"3","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Landing.js":"4","/Users/jellis/final_app/CityClimb_frontend/src/components/routing/Routes.js":"5","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Schedule.js":"6","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Search.js":"7","/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Login.js":"8","/Users/jellis/final_app/CityClimb_frontend/src/components/admin/StaffDashboard.js":"9","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/SingleClimb.js":"10","/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Register.js":"11","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Button.js":"12","/Users/jellis/final_app/CityClimb_frontend/src/store.js":"13","/Users/jellis/final_app/CityClimb_frontend/src/actions/types.js":"14","/Users/jellis/final_app/CityClimb_frontend/src/actions/auth.js":"15","/Users/jellis/final_app/CityClimb_frontend/src/utils/setAuthToken.js":"16","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Alert.js":"17","/Users/jellis/final_app/CityClimb_frontend/src/utils/api.js":"18","/Users/jellis/final_app/CityClimb_frontend/src/actions/alert.js":"19","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Climbs.js":"20","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/forms/CreateClimbForm.js":"21","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/forms/EditClimbForm.js":"22","/Users/jellis/final_app/CityClimb_frontend/src/reducers/index.js":"23","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/GymView.js":"24","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/ReadableDate.js":"25","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/buttons/DeleteClimbButton.js":"26","/Users/jellis/final_app/CityClimb_frontend/src/reducers/alert.js":"27","/Users/jellis/final_app/CityClimb_frontend/src/reducers/post.js":"28","/Users/jellis/final_app/CityClimb_frontend/src/reducers/auth.js":"29","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/ListByColour.js":"30","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/ClimbRowCol.js":"31","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/ClimbCard.js":"32","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/buttons/SetRemovalDateButton.js":"33","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/buttons/EditClimbButton.js":"34"},{"size":602,"mtime":1612503242796,"results":"35","hashOfConfig":"36"},{"size":1256,"mtime":1612737127404,"results":"37","hashOfConfig":"36"},{"size":2628,"mtime":1612738861011,"results":"38","hashOfConfig":"36"},{"size":348,"mtime":1612700343084,"results":"39","hashOfConfig":"36"},{"size":1301,"mtime":1612737127426,"results":"40","hashOfConfig":"36"},{"size":2522,"mtime":1612738699787,"results":"41","hashOfConfig":"36"},{"size":3449,"mtime":1612701288866,"results":"42","hashOfConfig":"36"},{"size":1806,"mtime":1612737127406,"results":"43","hashOfConfig":"36"},{"size":684,"mtime":1612737127406,"results":"44","hashOfConfig":"36"},{"size":1900,"mtime":1612737127409,"results":"45","hashOfConfig":"36"},{"size":7908,"mtime":1612737127406,"results":"46","hashOfConfig":"36"},{"size":977,"mtime":1612586950038,"results":"47","hashOfConfig":"36"},{"size":1035,"mtime":1612737127411,"results":"48","hashOfConfig":"36"},{"size":586,"mtime":1612737127405,"results":"49","hashOfConfig":"36"},{"size":1946,"mtime":1612737127405,"results":"50","hashOfConfig":"36"},{"size":314,"mtime":1612737127411,"results":"51","hashOfConfig":"36"},{"size":439,"mtime":1612737127408,"results":"52","hashOfConfig":"36"},{"size":451,"mtime":1612737127411,"results":"53","hashOfConfig":"36"},{"size":342,"mtime":1612737127405,"results":"54","hashOfConfig":"36"},{"size":955,"mtime":1612737922495,"results":"55","hashOfConfig":"36"},{"size":3982,"mtime":1612737127432,"results":"56","hashOfConfig":"36"},{"size":5831,"mtime":1612737127408,"results":"57","hashOfConfig":"36"},{"size":186,"mtime":1612737127410,"results":"58","hashOfConfig":"36"},{"size":2595,"mtime":1612737127433,"results":"59","hashOfConfig":"36"},{"size":592,"mtime":1612737127409,"results":"60","hashOfConfig":"36"},{"size":1908,"mtime":1612737127407,"results":"61","hashOfConfig":"36"},{"size":402,"mtime":1612737127410,"results":"62","hashOfConfig":"36"},{"size":1174,"mtime":1612737127410,"results":"63","hashOfConfig":"36"},{"size":1547,"mtime":1612737127410,"results":"64","hashOfConfig":"36"},{"size":924,"mtime":1612737127432,"results":"65","hashOfConfig":"36"},{"size":1102,"mtime":1612737127407,"results":"66","hashOfConfig":"36"},{"size":1103,"mtime":1612737127407,"results":"67","hashOfConfig":"36"},{"size":801,"mtime":1612737127408,"results":"68","hashOfConfig":"36"},{"size":626,"mtime":1612737127408,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ezi0h2",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"/Users/jellis/final_app/CityClimb_frontend/src/index.js",[],["147","148"],"/Users/jellis/final_app/CityClimb_frontend/src/App.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Navbar.js",["149","150","151","152"],"import React, { useState, Fragment } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Example = ({ logout }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div >\n      <Navbar color=\"light\" light expand=\"lg\" className=\"text-right\" style={{justify_content: \"flex-end\"}}>\n        <NavbarBrand href=\"/\"><img src=\"./icon.png\" alt=\"logo\" width=\"50px\" height=\"50px\"></img></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar >\n          <Nav navbar >\n\n            <NavItem>\n              <NavLink> <Link to=\"/\"> Home </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/climbs\"> Climbs </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/schedule\"> Schedule </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/help\"> Help </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when logged in as staff */}\n            <NavItem>\n              <NavLink> <Link to=\"/create_climb\"> Create Climb </Link> </NavLink>\n            </NavItem>\n\n            {/* Only visible when no staff logged in */}\n            <NavItem>\n              <NavLink> <Link to=\"/staff_login\"> Staff Login </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_register\"> Staff Register </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/staff_dashboard\"> Staff Dashboard </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink> <Link to=\"/climb_template\"> Climb </Link> </NavLink>\n            </NavItem>\n\n            <NavItem>\n              {/* <button onClick={() => {logout}}>Log out</button> */}\n              <NavLink> <a onClick={logout} href=\"#!\"> Logout </a> </NavLink>\n            </NavItem>\n\n            </Nav>\n            </Collapse>\n            \n          </Navbar>\n    </div>\n  )\n}\n\n\nExample.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Example);\n// TODO: Change EXAMPLE to something else","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Landing.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/routing/Routes.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Schedule.js",["153","154","155","156","157","158"],"import React, { useState, useEffect } from 'react'\nimport ClimbRowCol from '../climbs/ClimbRowCol'\n\nconst Schedule = () => {\n\n    const [climbs, setClimbs] = useState([])\n\n    useEffect(() => {\n\n        // Gets all climbs \n        fetch(\"http://localhost:8000/schedule/\")\n            .then(res => res.json())\n            .then(data => {\n                setClimbs(data)\n                console.log(data)\n            })\n            .catch(e => console.log(e))\n\n        return () => {\n            console.log('Unmounted (inside schedule)')\n        }\n    }, [])\n\n    // startDate is equal to 14 days before today\n    const startDate = (Date.now() - (12096e5))\n\n    // endDate is equal to 14 days before today\n    const endDate = (Date.now() + 12096e5)\n\n    // Create arrays of all climbs leaving and all climbs newly created\n    let climbsLeaving = climbs.filter(climb => { return (Date.parse(climb.removalDate) < endDate) })\n    let climbsNew = climbs.filter(climb => { return (Date.parse(climb.createdAt) > startDate) })\n\n    // TODO: DRY this up  \n\n    // Create arrays for each gym for climbs leaving and climbs newly created    \n    let miltonLeaving = climbsLeaving.filter(climb => climb.gym == \"milton\")\n    let miltonNew = climbsNew.filter(climb => climb.gym == \"milton\")\n\n    let newsteadLeaving = climbsLeaving.filter(climb => climb.gym == \"newstead\")\n    let newsteadNew = climbsNew.filter(climb => climb.gym == \"newstead\")\n\n    let westendLeaving = climbsLeaving.filter(climb => climb.gym == \"westend\")\n    let westendNew = climbsNew.filter(climb => climb.gym == \"westend\")\n\n    return (\n        <>\n            <br />\n            <details>\n                <summary>Leaving Soon</summary>\n                <h3>Milton</h3>\n                <ClimbRowCol climbs={miltonLeaving} showRemovalDate={true} />\n\n                <h3>Newstead</h3>\n                <ClimbRowCol climbs={newsteadLeaving} showRemovalDate={true} />\n\n                <h3>West End</h3>\n                <ClimbRowCol climbs={westendLeaving} showRemovalDate={true} />\n\n            </details>\n\n            <details>\n                <summary>New Climbs</summary>\n                <h3>Milton</h3>\n                <ClimbRowCol climbs={miltonNew} showCreatedDate={true} />\n\n                <h3>Newstead</h3>\n                <ClimbRowCol climbs={newsteadNew} showCreatedDate={true} />\n\n                <h3>West End</h3>\n                <ClimbRowCol climbs={westendNew} showCreatedDate={true} />\n            </details>\n        </>\n    )\n}\n\nexport default Schedule","/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Search.js",["159","160","161","162","163"],"/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Login.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/admin/StaffDashboard.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/SingleClimb.js",["164","165"],"import React, { useState, useEffect } from 'react'\nimport ReadableDate from './ReadableDate'\nimport {\n    Jumbotron\n} from 'reactstrap'\nimport { useHistory } from \"react-router-dom\"\n\n\n// The end point of the flow for the user wanting to look at a climb \n// This component is where the user is directed with the climb's QR code \nconst SingleClimb = (props) => {\n\n    let history = useHistory()\n\n    // TODO: Look into memoization \n    // If a climb is being passed as a prop we dont need to fetch\n    const API_ENDPOINT = \"http://localhost:8000\"\n    const { gym, colour, climbId } = props.match.params\n\n    console.log(\"inside single climb\")\n\n    const url = `${API_ENDPOINT}/climbs/${gym}/${colour}/${climbId}`\n\n    const [climb, setClimb] = useState([])\n\n    useEffect(() => {\n        console.log(\"Single Climb Mounted\")\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            setClimb(data)\n            console.log(data)\n        })\n        .catch(e => history.push('/'))\n\n\n       \n        return () => {\n            // console.log(\"Unmounted\")\n        }\n    }, [])\n    \n    return (\n        <>\n        <div  className=\"climbs\">\n        <br />\n            <Jumbotron>\n                <div className=\"yt-container\">\n                    <iframe class=\"responsive-iframe\" src={`https://www.youtube.com/embed/${climb.video}`}>   </iframe>\n                </div>\n\n                    <h1 className=\"display-3\">{climb.wall}</h1>\n                    <p className=\"lead\">Colour: {climb.colour} </p>\n                    <p className=\"lead\">Location: {climb.gym} </p>\n                    <p className=\"lead\">Date Set: <ReadableDate date={climb.createdAt}/> </p>\n                    <hr className=\"my-2\" />\n                    <p className=\"lead\">\n        \n                    </p>\n             </Jumbotron>\n\n        </div>\n        </>\n\n      )\n\n} \n\nexport default SingleClimb","/Users/jellis/final_app/CityClimb_frontend/src/components/auth/Register.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Button.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/store.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/actions/types.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/actions/auth.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/utils/setAuthToken.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Alert.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/utils/api.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/actions/alert.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/Climbs.js",["166","167","168"],"import React, { Fragment }  from 'react'\nimport { useForm } from \"react-hook-form\"\nimport GymView from '../climbs/GymView'\n\n// Component for the view when users click the 'Climbs' link in the navbar\nconst Climbs = () => {\n    const { register, watch } = useForm()\n\n    const selectedGym = watch(\"gym\", false)\n\n    \n    return (\n        <Fragment>\n            <p className='large'>Select Gym</p>\n            <form>\n                <input type=\"radio\" name=\"gym\" value=\"milton\" ref={register}/>Milton\n                <input type=\"radio\" name=\"gym\" value=\"newstead\" ref={register}/>Newstead\n                <input type=\"radio\" name=\"gym\" value=\"westend\" ref={register}/>West End\n            </form>\n\n            {selectedGym == \"milton\" && <GymView gym={\"milton\"}/>}\n            {selectedGym == \"newstead\" && <GymView gym={\"newstead\"}/>}\n            {selectedGym == \"westend\" && <GymView gym={\"westend\"}/>}\n        </Fragment>\n    )\n}\n\nexport default Climbs\n","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/forms/CreateClimbForm.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/forms/EditClimbForm.js",["169","170","171","172"],"import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport ReadableDate from '../../layout/ReadableDate'\nimport DeleteClimbButton from '../buttons/DeleteClimbButton'\nimport { useHistory } from \"react-router-dom\"\n\n\n\n\nconst EditClimbForm = (props) => {\n    const { register, handleSubmit, errors } = useForm()\n    let history = useHistory()\n    const API_ENDPOINT = \"http://localhost:8000\"\n\n    let { gym, colour, climbId } = props.match.params\n\n    let url = `${API_ENDPOINT}/climbs/${gym}/${colour}/${climbId}`\n\n    const [climb, setClimb] = useState([])\n\n    useEffect(() => {\n        console.log(\"Edit Climb useEffect Mounted\")\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            // console.log(data)\n\n            setClimb(data)\n        })\n        .catch(e => console.log(e))\n       \n        return () => {\n            console.log(\"Unmounted\")\n        }\n    }, [])\n\n    //When the climb is edited the new details will render on the page\n    useEffect(() => {\n        console.log(\"Edit Climb useEffect Rendered on Climb change\")\n        console.log(climb)\n        wall = climb.wall\n        image = climb.image\n        video = climb.video\n\n        return () => {\n            console.log(\"Unmounted\")\n        }\n    }, [climb])\n\n    let { wall, image, video} = climb\n\n    const youtubeUrl = `https://www.youtube.com/embed/${climb.video}`\n\n\n    // After fetch setClimb to the results of the update so that the current page will update with the details\n    // use history.push to update the url to the new params \n    const onSubmit = (data) => {\n        const formData = new FormData()\n\n        formData.append(\"gym\", data.gym)\n        formData.append(\"wall\", data.wall)\n        formData.append(\"colour\", data.colour)\n        formData.append(\"youtubeUrl\", data.youtubeUrl)\n        formData.append(\"image\", data.image[0])\n\n        \n        fetch(`${url}/edit`, {\n            method: 'PATCH',\n            body: formData,\n        }).then(res => res.json()).then((results) => setClimb(results.result))\n\n        history.push(`/climbs/${data.gym}/${data.colour}/${climbId}/edit`)\n    }\n\n\n    console.log(errors)\n\n    const youtubeRegex = /(?:https?:\\/\\/)?(?:(?:(?:www\\.?)?youtube\\.com(?:\\/(?:(?:watch\\?.*?(v=[^&\\s]+).*)|(?:v(\\/.*))|(channel\\/.+)|(?:user\\/(.+))|(?:results\\?(search_query=.+))))?)|(?:youtu\\.be(\\/.*)?))/\n\n    return (\n        <div>\n            <h2>Edit Climb with id: {climbId}</h2>\n\n            <h5>Current Details</h5>\n            <ul>\n                <li><b>Gym:</b> {gym}</li>\n                <li>Wall: {wall}</li>\n                <li>Colour: {colour}</li>\n                <li>Youtube ID: {video}</li>\n                <li>Image ID: {image}</li>\n                {climb.removalDate && <li> Removal Date: {<ReadableDate date={climb.removalDate} year={true}/>}</li>}\n            </ul>\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n            <label className=\"text-gray-700\">\n                    Gym\n              {/* <span className=\"text-red-500 required-dot\">*</span> */}\n                    <select name=\"gym\" ref={register({ required: true })} className=\"block w-52 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\">\n                        <option value=\"milton\">Milton</option>\n                        <option value=\"newstead\">Newstead</option>\n                        <option value=\"westend\">West End</option>\n                    </select>\n                </label>\n                <label className=\"text-gray-700\">\n                    Wall\n      <input type=\"text\" name=\"wall\" placeholder=\"Wall name\" ref={register({ required: true })} className=\"block w-52 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\">\n                    </input>\n                </label>\n                <label className=\"text-gray-700\">\n                    Colour\n      <select name=\"colour\" ref={register({ required: true })} className=\"block w-52 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\">\n                        <option value=\"black\">Black</option>\n                        <option value=\"blue\">Blue</option>\n                        <option value=\"green\">Green</option>\n                        <option value=\"orange\">Orange</option>\n                        <option value=\"purple\">Purple</option>\n                        <option value=\"red\">Red</option>\n                        <option value=\"white\">White</option>\n                        <option value=\"yellow\">Yellow</option>\n                    </select>\n                </label>\n                <br></br>\n\n                <input type=\"url\" placeholder={youtubeUrl} name=\"youtubeUrl\" ref={register({ required: true, pattern: youtubeRegex })} className=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-1/6 py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" />\n\n                <br></br>\n                <br></br>\n               \n                    <input ref={register} type=\"file\" name=\"image\" />\n\n                <br></br>\n                <button type=\"submit\" className=\"py-2 px-4  bg-purple-600 hover:bg-purple-700 focus:ring-purple-500 focus:ring-offset-purple-200 text-white w-1/6 transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \">\n                    Edit Climb\n                </button>\n\n            </form>\n\n            <DeleteClimbButton climb={climb} />\n        </div>\n    )\n}\n\nexport default EditClimbForm\n\n","/Users/jellis/final_app/CityClimb_frontend/src/reducers/index.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/GymView.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/layout/ReadableDate.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/buttons/DeleteClimbButton.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/reducers/alert.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/reducers/post.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/reducers/auth.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/ListByColour.js",["173"],"import React, { useState, useEffect } from 'react'\nimport ClimbRowCol from './ClimbRowCol'\n\n// This component fetches and displays the climbs for a gym/colour combo\nconst ListByColour = (props) => {\n\n    const API_ENDPOINT = \"http://localhost:8000\"\n    const { gym, colour } = props\n\n\n    const url = `${API_ENDPOINT}/climbs/${gym}/${colour}`\n\n\n    const [climbs, setClimbs] = useState([])\n\n    useEffect(() => {\n        console.log(\"Mounted\")\n        console.log(climbs)\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            console.log(data)\n\n            setClimbs(data)\n        })\n        .catch(e => console.log(e))\n       \n        return () => {\n            console.log(\"Unmounted\")\n        }\n    }, [])\n    \n    return (\n        <>\n            {colour.toUpperCase()}\n            <br />\n            <ClimbRowCol climbs={climbs}/>\n        </>\n      );\n\n} \n\nexport default ListByColour","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/ClimbRowCol.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/ClimbCard.js",["174"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport EditClimbButton from './buttons/EditClimbButton'\nimport SetRemovalDateButton from './buttons/SetRemovalDateButton'\n\nimport {\n    Card, CardImg, CardText, CardBody,\n CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst Climb = (props) => {\n    const climb = props.climb\n    let { _id, wall, colour, image, gym } = climb\n\n    return (\n            <Card> \n                <Link to={`/climbs/${gym}/${colour}/${_id}`}> \n                    <CardImg top width=\"100%\" src={`http://res.cloudinary.com/coderacademy/image/upload${image}`} alt=\"Card image cap\" />\n                    <CardBody>\n                    <CardTitle tag=\"h5\">{wall}</CardTitle>\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{colour}</CardSubtitle>\n                    <CardText>{_id}</CardText>\n                    </CardBody>\n                </Link>\n\n                <EditClimbButton gym={gym} colour={colour} climbId={_id} />\n\n                <SetRemovalDateButton climb={climb} />\n            </Card>\n)\n}\n\n\nexport default Climb ","/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/buttons/SetRemovalDateButton.js",[],"/Users/jellis/final_app/CityClimb_frontend/src/components/climbs/buttons/EditClimbButton.js",[],["175","176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":35},{"ruleId":"181","severity":1,"message":"185","line":3,"column":22,"nodeType":"183","messageId":"184","endLine":3,"endColumn":28},{"ruleId":"181","severity":1,"message":"186","line":4,"column":5,"nodeType":"183","messageId":"184","endLine":4,"endColumn":11},{"ruleId":"181","severity":1,"message":"187","line":5,"column":5,"nodeType":"183","messageId":"184","endLine":5,"endColumn":10},{"ruleId":"188","severity":1,"message":"189","line":37,"column":65,"nodeType":"190","messageId":"191","endLine":37,"endColumn":67},{"ruleId":"188","severity":1,"message":"189","line":38,"column":57,"nodeType":"190","messageId":"191","endLine":38,"endColumn":59},{"ruleId":"188","severity":1,"message":"189","line":40,"column":67,"nodeType":"190","messageId":"191","endLine":40,"endColumn":69},{"ruleId":"188","severity":1,"message":"189","line":41,"column":59,"nodeType":"190","messageId":"191","endLine":41,"endColumn":61},{"ruleId":"188","severity":1,"message":"189","line":43,"column":66,"nodeType":"190","messageId":"191","endLine":43,"endColumn":68},{"ruleId":"188","severity":1,"message":"189","line":44,"column":58,"nodeType":"190","messageId":"191","endLine":44,"endColumn":60},{"ruleId":"181","severity":1,"message":"192","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":13},{"ruleId":"181","severity":1,"message":"193","line":4,"column":15,"nodeType":"183","messageId":"184","endLine":4,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":29,"column":38,"nodeType":"190","messageId":"191","endLine":29,"endColumn":40},{"ruleId":"188","severity":1,"message":"189","line":30,"column":38,"nodeType":"190","messageId":"191","endLine":30,"endColumn":40},{"ruleId":"188","severity":1,"message":"189","line":31,"column":38,"nodeType":"190","messageId":"191","endLine":31,"endColumn":40},{"ruleId":"194","severity":1,"message":"195","line":42,"column":8,"nodeType":"196","endLine":42,"endColumn":10,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":50,"column":21,"nodeType":"200","endLine":50,"endColumn":108},{"ruleId":"188","severity":1,"message":"189","line":21,"column":26,"nodeType":"190","messageId":"191","endLine":21,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":22,"column":26,"nodeType":"190","messageId":"191","endLine":22,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":23,"column":26,"nodeType":"190","messageId":"191","endLine":23,"endColumn":28},{"ruleId":"194","severity":1,"message":"201","line":36,"column":8,"nodeType":"196","endLine":36,"endColumn":10,"suggestions":"202"},{"ruleId":"194","severity":1,"message":"203","line":42,"column":16,"nodeType":"204","endLine":42,"endColumn":26},{"ruleId":"194","severity":1,"message":"205","line":43,"column":17,"nodeType":"204","endLine":43,"endColumn":28},{"ruleId":"194","severity":1,"message":"206","line":44,"column":17,"nodeType":"204","endLine":44,"endColumn":28},{"ruleId":"194","severity":1,"message":"207","line":32,"column":8,"nodeType":"196","endLine":32,"endColumn":10,"suggestions":"208"},{"ruleId":"181","severity":1,"message":"209","line":8,"column":27,"nodeType":"183","messageId":"184","endLine":8,"endColumn":33},{"ruleId":"177","replacedBy":"210"},{"ruleId":"179","replacedBy":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Row' is defined but never used.","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["214"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["215"],"Assignments to the 'wall' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'image' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'video' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'climbs' and 'url'. Either include them or remove the dependency array.",["216"],"'Button' is defined but never used.",["212"],["213"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [history, url]",{"range":"223","text":"224"},"Update the dependencies array to be: [url]",{"range":"225","text":"226"},"Update the dependencies array to be: [climbs, url]",{"range":"227","text":"228"},[1097,1099],"[history, url]",[942,944],"[url]",[741,743],"[climbs, url]"]